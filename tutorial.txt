This is just an simple file. It does not do much. Just learning how to make new repo.

link to this tutorial https://www.youtube.com/watch?v=BCQHnlnPusY
and http://www.codingdojo.com/blog/git-tutorial-for-beginners/

So the key concepts in git:

1- Git: 
It is basically a version control system. Invented by the same guy that created Linux.  It also have other important feature called collabrate. Different people working on same file at same time.

"A software application that records changes made to a set of files over time, allowing specific historical versions to be recalled and restored as necessary."

2- Git Hub: 

It is a webserve. You can signup and get your codes. It is social coder. 

3- Reposotory:
It is like a project where you can add multiple files.
"A shared database with a full revision history of all files under version control."

4- Commit: 

It is similar to saving your files or may be codes. 

"When a modified file is placed back into the repository, thus indicating a revision has occurred, this is considered a commit of the file."

5- Commit Hash: 

I unique identifier for the file . East commit has a unique identifier. Like this file for instance. Its hash tag is e9aca2c. But it will change as we make more changes. 

6- Branches 
 Most powerful and somewhat unique features of Git is branching, which allows development within a repository to occur simultaneously within completely separate branches.  Revisions in unique branches will have no effect on one another until those branches are merged (joined together) at a later time.
 
 In our case  we have 
        my-github-tutorial
            |
        commit (changed happened and has unique identifier)
            |
        commit (changed happened and has unique identifier)
            |
        commit (changed happened and has unique identifier)
            |
        commit (changed happened and has unique identifier)
 
 These are the master branch. Lets say we want to add a branch by clicking the branch bench on the left corner. 
 
 Now we have created a different bench for this tutorial. Lets say, we like the idea of introducing a new bench and it worked well. So, now we can merge the two benches into a single bench.  But how
 
 First we need to see the benchs in our graph. If we like the bench. We can make a pull request which simply means merge the two brenches together.
The good thing is that you can see all the changes in the graph. 



7- Fork: 

Exact replica which means I can take the exact copy of the repo and do anything I want without changing to the original code. If you don't have the permission to change it. Then you can fork it. 


8- Pull Request: 

It means if someone made changes to your program. They will request a pull, which means they want you to accept the changes that they made. 

9- Issue: 
Leave a comments on the project. Like I noticed spelling error, please add this feature, I found a bug in your project. The issue remains open untill it is solved or the owner or the creator of issue  declared it close. 

All the issue has id number. It will help to commit on relevant issue. 

